
-- js 커리큘럼 --

1주차
day01: js, nodejs, 입출력, 변수, 자료형, 연산자, 조건식, 호이스팅
day02: 제어문, 반복문, 함수형 프로그래밍(프로그래밍 패러다임), 함수, 지연벽수 전역변수

2주차
* day03: 모듈화, 객체, 메서드, 배열, 배열의 내장함수와 고차함수, 콜백함수, json
* day04: javascript 메모리 부여방식, 깊은 복사, 얕은 복사, 전개 연산자, 구조 분해 할당

3주차
day05: 이터러블 오브젝트, set, map, 상황에 따라 다양한 반복문, 예외 처리
day06: DOM API, node properties, class, child, 백엔드 없이 게시판 만들기

4주차
day07: 마우스 이벤트, 베너이벤트, 스크롤 이벤트, 옵저브 인터렉션
* day08: 비동기, 동기, 이벤트 루프, promise, ajax, axios/fetch

5주차
* day09: 스레드, 실행컨텍스트, 가비지 컬렉터, this 바인딩
* day10: class, 객체지향, prototype

----------------------------------------

Javascript
    1996년 3월 
    -----------> 10일만에 태어난 언어
    "HTML 페이지를 동적으로 만들고 싶어"  --> 가벼운 언어 ---> 성능도 좋지 않았다.
    구글 -> 2009년 v8 엔진 (브라우저 엔진) 출시

Javascript 와 Java의 관계?
    Mocha -> LiveScript -> Javascript

Javascript는 인터프리터 언어
    안녕하세여 -> 컴파일 - 기계어 -> 0101010101(컴퓨터가 이해할 수 있는 언어)

    컴파일 언어와는 반대로 변환 과정 없이 소스 코드를 바로 실행하는 프로그램 언어
    v8 엔진에 의하여 필요에 따라 컴파일 과정을 거칠 수 있도록하여 자바스크립트의 성능을 향상

    NaN + a  => NaNa
    json
    ---- 데이터 양식 -> 키와 값

----------------------------------------

JS 적용법

-내부-

<html>
    <script>
        ...javascript
    </script>
<html>

-외부-

*.js
<html>
    ...
    <script src="경로"></script>
<html>

----------------------------------------

    입출력

    입력 (input)
    console.log()
    console.error()
    window.(생략가능) alert()
    window.(생략가능) confirm()

    출력 (output)
    window.(생략가능) prompt()

    window -> browser
    browser가 없으면 실행이 되지 않습니다.

    * 개발중 -> 에러가 생김 -> 어디서 에러가 생겼는지 알 수 있을까?
        1 ----> 10까지 개발

        5 -> console.log(5) -> 잘 나와 ->  6 ~ 10
        8 -> 

        -> 개발 중 디버깅을 위해서 로그를 확인할 필요가 있고 이 때 console.log()를
           활용하여 에러가 난 범위를 좁혀가며 디버깅 할 수 있다.

        단, 디버깅이 끝난 후에는 삭제 해주어야 한다.

----------------------------------------

    .js를 브라우저 환경이 아닌 다른 환경에서 직접 실행할 수 있는 NodeJS 환경에서는 Window가 실행되지 않습니다.

    NodeJS
        크롬의 V8엔진을 브라우저 바깥으로 꺼내어 JS를 브라우저 외부에서도 실행할 수 있도록
        하는 런타임(환경, 실행)

        대표적으로 react-js완 같은 js 기반 프레임워크(도구)들이 nodeJS 환경에서 실행한다.

        html 대신 js로 쓰고
        js를 html안에 직접 작성

        설치
        https://nodejs.org/ko

        무지성 다음 설치 -> 설치 완료 후 -> vs-code 재시작 -> 터미널 -> node -v

----------------------------------------
    
    자바스크립트 자료형 (데이터의 종류, 타입)

    원시 타입
        string 문자열
        boolean 참거짓(T/F)
        undefined (데이터의 타입이 지정되어있지 않은 상태)
        null (값이 명확히 비어있는 상태)

    객체 타입, 참조타입(집단)
        자바스크립트에서 원시타입을 제외한 모든 것은 객체 타입
        하나의 데이터가 아닌 여러 데이터가 집단을 이루고 있는 경우가 많음

    => 아, 자바스크립트에는 이러한 데이터의 종류가 있고, 우리가 이런 데이터를 사용 해야하는구나

----------------------------------------

    변수
        위의 데이터 타입의 데이터를 직접 가입해서 사용할 수 있지만
        console.log(5)

        그러나 해당 데이터를 컴퓨터가 기억하게 하여 일회성 사용으로 그치지 않고 그 



